
                               



{% block extralinks %}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">  
{% endblock extralinks %}








				 <form id="delete-form-{{x.id}}" action="{% url 'allstudents' x.id %}" method="post" style="display: inline-block;">
                                    {% csrf_token %}
                                    <input type="hidden" name="_method" value="DELETE">
                                    <button  class="btn btn-primary" type="button" onclick="confirmDelete({{x.id}})"> <i class="fa-solid fa-trash"></i> </button>
                                 </form>


                                <form action="{% url 'allstudents' x.id %}" method="post" style="display: inline-block;">
                                    {% csrf_token %}
                                    <input type="hidden" name="_method" value="PUT">
                                    <button class="btn btn-danger" type="submit"> <i class="fa-solid fa-pen"></i> </button>
                                </form>





#### Java Scripts 



{% block extrascripts %}

<script>
    function confirmDelete(studentId) {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                document.getElementById('delete-form-' + studentId).submit();
            }
        });
    }
    </script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

{% endblock extrascripts %}






####Python views methods





class AllstudentViews(View):
    @method_decorator(login_required)
    def get(self, request):
        User = request.user
        try:
            admin = HoltelUser.objects.get(users = User)
        except:
            return redirect('/login/')


        hostel_student = HoltelBorder.objects.filter(admin = admin)

        cp = {
            'hostel_student':hostel_student,
        }
        return render(request, 'Users/all_students.html', context=cp)

    @method_decorator(login_required)
    def delete(self, request, id):
        # Handle DELETE request logic here
        student = HoltelBorder.objects.get(id = id)

        usr = request.user
        try:
            admin = HoltelUser.objects.get(users = usr)
        except:
            return redirect('/')
        
        if usr.user_type == '1' and student.admin == admin:
            
            sits = student.site_no
            sits.if_blank = True
            sits.save()
            usr = CustomUser.objects.get(id = student.users.id)
            usr.delete()
            student.delete()
        
        return redirect('/allstudents/')
    
    
    @method_decorator(login_required)
    def put(self, request, id):
        student = HoltelBorder.objects.get(id = id)
        user = request.user
        try:
            admin = HoltelUser.objects.get(users = user)
        except:
            return redirect('/')
        sits = HostelSits.objects.filter(admin = admin, if_blank = True)

        cp = {
            'student':student,
            'sits':sits,
        }        
        return render(request,'Users/edite_hostel_sutdent.html', context=cp)

    @method_decorator(login_required)
    def save(self,request, id):
        usr = request.user
        try:
            student =  HoltelBorder.objects.get(id = id)
        except:
            return redirect('/')


        try:
            admin = HoltelUser.objects.get(users = usr)
        except:
            return redirect('/')
        
        if usr.user_type == '1' and student.admin == admin:             
            data = request.POST
            user = student.users
            user.username = data.get('username')
            user.email = data.get('email')
            user.phone_number = data.get('phone')
            student.phone_number = data.get('phone')
            if data.get("sit"):
                blsit = student.site_no
                blsit.if_blank = True
                blsit.save()
                sit = HostelSits.objects.get(id = data.get('sit'))
                sit.if_blank = False
                sit.save()
                student.site_no = sit
            
            user.save()
            student.save()
            messages.info(request,'Successfully Updated !')
            return redirect(f'/allstudents/')
        else:
            return redirect('/')

    

    @method_decorator(login_required)
    def post(self, request, id=None):
        method = request.POST.get('_method', '').upper()
        if method == 'DELETE':
            return self.delete(request, id)
        elif method == 'PUT':
            return self.put(request, id)
        elif method == "SAVE":
            return self.save(request, id)
        
        return HttpResponseNotAllowed(['DELETE', 'PUT','SAVE'])
    








#####
#url config
path('yoururls/<int:id>/', MyProduct.as_view(), name='yoururls')


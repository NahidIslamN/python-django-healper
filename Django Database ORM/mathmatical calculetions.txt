class Student_result(models.Model):
    Student_id = models.ForeignKey(Student, on_delete=models.SET_NULL, null=True, blank=True)
    Subjects_id = models.ForeignKey(Subjects, on_delete=models.SET_NULL, null=True, blank=True)
    practical_marks = models.FloatField(null=True, blank=True)
    Exam_marks = models.FloatField(null=True, blank=True)
    Cretedat = models.DateTimeField(auto_now_add=True)
    updateat = models.DateTimeField(auto_now=True)
    Total = models.FloatField(null=True, blank=True)

    def __str__(self):
        return self.Student_id.admin.username

    def save(self, *args, **kwargs):
        # Calculate the total marks by adding Exam_marks and practical_marks
        self.Total =int(self.Exam_marks) + int(self.practical_marks)
        super().save(*args, **kwargs)
